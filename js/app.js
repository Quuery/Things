// Generated by CoffeeScript 1.3.3

/*
 * Main file to start application
 *
 * @package application
 * @author Daniel Leitner, <daleitner@me.com>
*/


(function() {

  define(function() {
    var Application;
    Application = (function() {
      /* 
       * Is loading spinner visible
       * 
       * @var boolean
       * @access private
      */

      var _ENV, _NAME, _VERSION, _app, _env, _envDevelopment, _envProduction, _hideLoadingScreen, _initEmber, _initLoadingScreen, _initModernizr, _initUI, _isLoading, _modernizrTestCases, _modernizrTestResults, _uiReady;

      function Application() {}

      _isLoading = function() {
        return false;
      };

      /* 
       * Are all ui components ready to use
       * 
       * @var boolean
       * @access private
      */


      _uiReady = function() {
        return false;
      };

      /* 
       * Test for modernizr
       * 
       * @var array
       * @access private
      */


      _modernizrTestCases = function() {
        return ['localstorage'];
      };

      /* 
       * Test results of modernizr tests
       *
       * @var array
       * @access private
      */


      _modernizrTestResults = function() {
        return [
          {
            'testCase': 'localstorage',
            'passed': true
          }
        ];
      };

      /* 
       * Application object
       *
       * @var Object<Ember>
       * @access private
      */


      _app = function() {
        return Em.Application.create();
      };

      /* 
       * Application verison
       *
       * @var float
       * @access private
      */


      _VERSION = function() {
        return 0.1;
      };

      /* 
       * Application name
       *
       * @var string
       * @access private
      */


      _NAME = function() {
        return '';
      };

      /* 
       * Application env
       *
       * @var string
       * @access private
      */


      _ENV = function() {
        return 'development';
      };

      /* 
       * Init application and all required components
       *
       * @access public
      */


      Application.prototype.init = function() {
        _env();
        _initLoadingScreen();
        return _hideLoadingScreen();
      };

      /* 
       * Run Modernizr tests
       *
       * @access private
       * @return boolean
      */


      _initModernizr = function() {
        return true;
      };

      /* 
       * Init Ember object
       *
       * @access private
      */


      _initEmber = function() {
        return true;
      };

      /* 
       * Init loading screen
       *
       * @access private
      */


      _initLoadingScreen = function() {
        _isLoading = true;
        return $('#loading').modal({
          show: true
        });
      };

      /* 
       * Hide loading screen
       *
       * @access private
      */


      _hideLoadingScreen = function() {
        if (_isLoading && _uiReady) {
          $('#loading').modal('hide');
          return _isLoading = false;
        }
      };

      /* 
       * Hide loading screen
       *
       * @access private
      */


      _env = function() {
        if (_ENV === 'development') {
          return _envDevelopment();
        } else {
          return _envProduction();
        }
      };

      /* 
       * Will be called, if _ENV is set to development. 
       * Enable debug.
       *
       * @access private
      */


      _envDevelopment = function() {};

      /* 
       * Will be called, if _ENV is set to production. 
       * Disable debug and activate cache.
       *
       * @access private
      */


      _envProduction = function() {};

      /* 
       * Init all ui components (jQueryUI, Bootstrap)
       *
       * @access private
      */


      _initUI = function() {
        $('a[rel=tooltip]').tooltip();
        $('#new').modal();
        $(".container").sortable({
          handle: '.drag-handle',
          placeholder: 'hero-unit',
          update: function(event, ui) {}
        });
        $(".container").disableSelection();
        return _uiReady = true;
      };

      return Application;

    })();
    return new Application();
  });

}).call(this);
